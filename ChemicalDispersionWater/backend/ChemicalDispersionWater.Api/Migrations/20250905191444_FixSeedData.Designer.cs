// <auto-generated />
using System;
using ChemicalDispersionWater.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ChemicalDispersionWater.Api.Migrations
{
    [DbContext(typeof(ChemicalDispersionDbContext))]
    [Migration("20250905191444_FixSeedData")]
    partial class FixSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ChemicalDispersionWater.SharedModels.Chemical", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("BoilingPointC")
                        .HasColumnType("double precision");

                    b.Property<double>("Density")
                        .HasColumnType("double precision");

                    b.Property<double>("MolecularWeight")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("SolubilityMgL")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Chemicals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BoilingPointC = 0.0,
                            Density = 0.84999999999999998,
                            MolecularWeight = 0.0,
                            Name = "Oil",
                            SolubilityMgL = 0.0
                        },
                        new
                        {
                            Id = 2,
                            BoilingPointC = 0.0,
                            Density = 1.2,
                            MolecularWeight = 0.0,
                            Name = "Acid",
                            SolubilityMgL = 0.0
                        });
                });

            modelBuilder.Entity("ChemicalDispersionWater.SharedModels.Spill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChemicalId")
                        .HasColumnType("integer");

                    b.Property<Point>("Location")
                        .HasColumnType("geometry");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Volume")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ChemicalId");

                    b.ToTable("Spills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChemicalId = 1,
                            Location = (NetTopologySuite.Geometries.Point)new NetTopologySuite.IO.WKTReader().Read("SRID=4326;POINT (-122.4194 37.7749)"),
                            Timestamp = new DateTime(2025, 9, 5, 12, 0, 0, 0, DateTimeKind.Utc),
                            Volume = 1000.0
                        },
                        new
                        {
                            Id = 2,
                            ChemicalId = 2,
                            Location = (NetTopologySuite.Geometries.Point)new NetTopologySuite.IO.WKTReader().Read("SRID=4326;POINT (-122.5 37.8)"),
                            Timestamp = new DateTime(2025, 9, 5, 11, 0, 0, 0, DateTimeKind.Utc),
                            Volume = 500.0
                        });
                });

            modelBuilder.Entity("ChemicalDispersionWater.SharedModels.TideInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("TideHeight")
                        .HasColumnType("double precision");

                    b.Property<string>("TideType")
                        .HasColumnType("text");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Tides");
                });

            modelBuilder.Entity("ChemicalDispersionWater.SharedModels.WeatherData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Humidity")
                        .HasColumnType("double precision");

                    b.Property<double>("TemperatureC")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("WindDirection")
                        .HasColumnType("double precision");

                    b.Property<double>("WindSpeed")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Weather");
                });

            modelBuilder.Entity("ChemicalDispersionWater.SharedModels.Spill", b =>
                {
                    b.HasOne("ChemicalDispersionWater.SharedModels.Chemical", "Chemical")
                        .WithMany()
                        .HasForeignKey("ChemicalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chemical");
                });
#pragma warning restore 612, 618
        }
    }
}
